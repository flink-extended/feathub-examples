version: '2.1'
services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/tmp/zk"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    # Use Kafka 3.2
    image: docker.io/bitnami/kafka:3.2
    ports:
      - "9093:9093"
    volumes:
      - "kafka_data:/tmp/kafka"
    environment:
      - BITNAMI_DEBUG=yes
      - KAFKA_ENABLE_KRAFT=no
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
  flink:
    image: apache/flink:1.15.2
    command:
      - bash
      - -c
      - "./bin/start-cluster.sh; while true; do sleep 10; done"
    ports:
      - "8081:8081"
    volumes:
      - "flink_data:/tmp/flink"
      - "./data:/tmp/data"

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  flink_data:
    driver: local
